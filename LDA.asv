%% Carga de datos ya normalizados
clear all
load Trainnumbers.mat
load datos_normalizacion.mat
[D,N]=size(Trainnumbers.image); % nº dim iniciales   nº datos


%% LDA
sep_data = class_separation(data_n, Trainnumbers.label);

[SC, SW, SB, mC] = scatter_matrices(sep_data);
[W_lda,Diag] = eig(inv(SW)*SB);
latent = diag(Diag);

%% Para observar la evolución del MSE en función de las dimensiones
% Hasta que dimesiones queremos testear
Num_dim = 630;
D_lda_max = 673;
dif = D_lda_max-Num_dim;
MSE = zeros(1,dif);

for D_lda = 673:-1:Num_dim   

    % LDA
   
    %datos ya dimensionalidad reducida
    proyectados = W_lda(:,1:D_lda)'*data_n;
    % datos reconstruidos normalizados
    reconstruidos = W_lda(:,1:D_lda)*proyectados;

    reconstruidos_des = zeros(D,N);
    % datos reconstruidos desnormalizados
    reconstruidos_des(ind_validos, : ) = (reconstruidos.*sigma_validos) + media_validos;
    % reconstruidos_des = real(reconstruidos_des);

    % Error
    %MSE(dif) = D*mse(Trainnumbers.image-reconstruidos_des);
    MSE1 = D*mse(Trainnumbers.image-reconstruidos_des);

    dif = dif - 1;

end

%% No se plotea la parte imaginaria
                
figure;
plot(D_lda_max-1:-1:Num_dim, MSE(1,end:-1:1), 'LineWidth', 1.5); % El eje x está al revés
%plot(D_lda_max:-1:Num_dim, MSE(D_lda_max:-1:Num_dim), 'LineWidth', 1.5);   %Funciona
%plot(Num_dim:D_lda_max, MSE(Num_dim:D_lda_max), 'LineWidth', 1.5);
xlabel('nº de dimensiones')
ylabel('MSE (por unidad)')
xlim([Num_dim 672])



%% Variables

D_lda = 673;    %Dimensiones que queremos para el LDA (673,9)Límites 


%%
%datos ya dimensionalidad reducida
proyectados = W_lda(:,1:D_lda)'*data_n;
% datos reconstruidos normalizados
reconstruidos = W_lda(:,1:D_lda)*proyectados; 



reconstruidos_des = zeros(D,N);
% datos reconstruidos desnormalizados
reconstruidos_des(ind_validos, : ) = (reconstruidos.*sigma_validos) + media_validos;
% reconstruidos_des = real(reconstruidos_des);

rp = randperm(N, 4);
figure;
for i = 1:4
    subplot(2, 4, i*2 - 1)
    digit_display(Trainnumbers.image, rp(i))
    subplot(2, 4, i*2)
    digit_display(reconstruidos_des, rp(i))
end


% Error
MSE = D*mse(Trainnumbers.image-reconstruidos_des); 
















